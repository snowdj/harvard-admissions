{"version":3,"sources":["assets/Data.js","components/Probability.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["data","Probability","percentage","athletics","this","props","ethnicity","connections","citizenship","decile","calculateDecile","mathSAT","verbalSAT","GPA","subjectSAT","ai","calculateAcademicIndex","console","log","className","calculatePercentage","React","Component","Input","state","handleChange","bind","check","event","preventDefault","setState","target","name","value","checked","type","min","max","step","onChange","subjetSAT","App","Form","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2dc229f0.chunk.js","sourcesContent":["\nvar data = [\n    [0,6.32,0.03,3.19,0,0,0,6.29,0.01,5.27],\n    [0.39,12.2,1.03,6.61,0.32,11.54,0.2,7.16,0.53,10.47],\n    [0.56,16.67,5.19,25.36,1.95,8.15,0.64,11.53,1.65,15.56],\n    [1.82,22.62,12.76,39.94,5.5,30.2,0.86,23.9,3.29,23.72],\n    [2.57,26.18,22.41,48.92,9.13,42.45,1.86,21.28,4.4,28.39],\n    [4.2,31.85,29.72,54.73,13.65,41.46,2.49,29.78,5.64,33.7],\n    [4.79,36.04,41.12,82.43,17.28,48.49,3.98,40.45,6.61,38.51],\n    [7.53,47.49,44.48,75.01,22.93,49.85,5.12,53.17,8.22,47.66],\n    [10.77,56.94,54.59,99.9,26.16,43.98,7.55,56.45,10.4,56.67],\n    [15.27,57.07,56.06,83.43,31.32,95.1,12.69,63.02,14.58,60.64]\n];\n\nexport default data;\n","import React from 'react';\nimport data from '../assets/Data';\n\nclass Probability extends React.Component {\n\n    //All functions in this class are based on pseudocode from Dr. Tyler Ransom.\n\n    calculatePercentage() {\n        let percentage = -1; //if -1 shows up on the site, then something needs to be fixed\n        \n        //Redundant variable name changes, but it makes the code more readable\n        let athletics = this.props.athletics;\n        let ethnicity = this.props.ethnicity;\n        let connections = this.props.connections;\n        let citizenship = this.props.citizenship;\n\n        if(!citizenship){\n            return <p>Your admissions chances are unknown!</p>;\n        }\n\n        let decile = this.calculateDecile();\n\n        if(connections){\n            if(ethnicity==='white'){\n                percentage = data[decile][1];\n            }else if(ethnicity==='african-american'){\n                percentage = data[decile][3];\n            }else if(ethnicity==='hispanic'){\n                percentage = data[decile][5];\n            }else if(ethnicity==='asian-american'){\n                percentage = data[decile][7];\n            }else{\n                percentage = data[decile][9];\n            }\n        }else{\n            if(ethnicity==='white'){\n                percentage = data[decile][0];\n            }else if(ethnicity==='african-american'){\n                percentage = data[decile][2];\n            }else if(ethnicity==='hispanic'){\n                percentage = data[decile][4];\n            }else if(ethnicity==='asian-american'){\n                percentage = data[decile][6];\n            }else{\n                percentage = data[decile][8];\n            }\n        }\n\n        if(athletics){ //athletics should override all other conditions, so this if-else cascade should be last.\n            if(decile < 1){\n                percentage = 50;\n            }else if(decile >= 1 && decile <= 3){\n                percentage = 79.52;\n            }else if(decile >= 4 && decile <= 6){\n                percentage = 87.21;\n            }else if(decile >= 7 && decile <= 9){\n                percentage = 94.04;\n            }\n        }\n\n        return <p>{percentage}% of students with your attributes were accepted to Harvard.</p>\n    }\n\n    calculateAcademicIndex() { //the + sign is a unary operator to convert the props from strings to numbers\n        return ((+this.props.mathSAT + +this.props.verbalSAT)/20 + +this.props.GPA*20 + +this.props.subjectSAT/10);\n    }\n\n    calculateDecile() {\n        let ai = +this.calculateAcademicIndex();\n        console.log(ai);\n        let decile;\n        //this function assumes that 60 <= ai <= 240 (actually the lower bound is 40!)\n        //if it is not within those bounds decile will be assigned -1\n        //so we know something is wrong\n        if(40<= ai && ai <=193.5){\n            decile = 1;\n        }else if(193.5 < ai && ai <= 205.5){\n            decile = 2;\n        }else if(205.5 < ai && ai <= 213){\n            decile = 3;\n        }else if(213 < ai && ai <= 218.5){\n            decile = 4;\n        }else if(218.5 < ai && ai <= 223){\n            decile = 5;\n        }else if(223 < ai && ai<= 226.5){\n            decile = 6;\n        }else if(226.5 < ai && ai <= 229.5){\n            decile = 7;\n        }else if(229.5 < ai && ai <= 232.5){\n            decile = 8;\n        }else if(232.5 < ai && ai<= 235.8){\n            decile = 9;\n        }else if(235.8 < ai && ai <= 240){\n            decile = 10;\n        }\n\n        decile--;\n\n        return decile;\n    }\n    \n    render(){\n        return(\n            <div className='probability'>\n                <p>{this.calculatePercentage()}</p>\n                <p><b>Stats for nerds:</b></p>\n                <p>Total SAT: {+this.props.mathSAT + +this.props.verbalSAT}</p>\n                <p>Academic Index: {(+this.props.mathSAT + +this.props.verbalSAT)/20 + +this.props.GPA*20 + +this.props.subjectSAT/10}</p>\n                <p>Academic Index Decile: {+this.calculateDecile() + 1}</p>\n            </div>\n        );\n    }\n\n}\n\nexport default Probability;","import React from 'react';\nimport Probability from './Probability';\nimport '../App.css'\n\nclass Input extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mathSAT: 500,\n            verbalSAT: 500,\n            GPA: 2.0,\n            subjectSAT: 500,\n            citizenship: true,\n            ethnicity: 'white',\n            athletics: false,\n            connections: false\n        };\n\n       this.handleChange = this.handleChange.bind(this);\n       this.check = this.check.bind(this);\n    }\n\n    handleChange(event){\n        event.preventDefault();\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    check(event){\n        let checked = event.target.checked;\n        if(checked){\n            this.setState({\n                [event.target.name]: true\n            })\n        }else{\n            this.setState({\n                [event.target.name]: false\n            })\n        }\n    }\n\n    render(){\n\n        return(\n            <div className='form'>\n                <form>\n                    <p><label>What was your highest score on the math section of the SAT?</label></p>\n                    <input \n                        type='range' \n                        min={200} \n                        max={800} \n                        value={this.state.mathSAT} \n                        step={10} name='mathSAT' \n                        onChange={this.handleChange}\n                    />\n                    <div>{this.state.mathSAT}</div>\n                    \n                    <p><label>What was your highest score on the verbal section of the SAT?</label></p>\n                    <input \n                        type='range' \n                        min={200} \n                        max={800} \n                        value={this.state.verbalSAT} \n                        step={10} name='verbalSAT' \n                        onChange={this.handleChange}\n                    />\n                    <div>{this.state.verbalSAT}</div>\n\n                    <p><label>What is your high school GPA (normalized to a 4-point scale)?</label></p>\n                    <input \n                        type='range' \n                        min={0.0} \n                        max={4.0} \n                        value={this.state.GPA} \n                        step={0.01} \n                        name='GPA' \n                        onChange={this.handleChange}\n                    />\n                    <div>{this.state.GPA}</div> {/* Not sure if we should have 2 or 3 significant figures here */}\n\n                    <p><label>What is your average score across all of the SAT II subject tests that you've taken?</label></p>\n                    <input \n                        type='range' \n                        min={200} \n                        max={800} \n                        value={this.state.subjetSAT} \n                        step={10} name='subjectSAT' \n                        onChange={this.handleChange}\n                    />\n                    <div>{this.state.subjectSAT}</div>\n\n                    <p><label>Are you a US citizen or permanent resident?</label></p>\n                    Yes<input \n                        type='checkbox' \n                        checked={this.state.citizenship} \n                        name='citizenship' \n                        onChange={this.check}\n                    />\n                   \n                    <p><label>What is your race/ethnicity?</label></p>\n                    <select \n                        name=\"ethnicity\" \n                        checked={this.state.ethnicity} \n                        onChange={this.handleChange}\n                    >\n                        <option value='white'>White</option>\n                        <option value='african-american'>African American</option>\n                        <option value='hispanic'>Hispanic</option>\n                        <option value='asian-american'>Asian-American</option>\n                        <option value='other'>Other</option>\n                        <option value='undisclosed'>Prefer not to say</option>\n                    </select>\n\n                    <p><label>Are you being recruited by Harvard for varsity athletics?</label></p>\n                    Yes<input \n                        type='checkbox' \n                        name='athletics'\n                        checked={this.state.athletics}\n                        onChange={this.check}\n                    /> \n\n                    <p><label>Do you have any non-athletic special connection to Harvard? For example, do any of the following cases apply to you:</label></p>\n                    <ul>\n                        <li>You have relatives who are Harvard alumni.</li>\n                        <li>You have relatives who are Harvard employees.</li>\n                        <li>You have relatives who made large donations to Harvard in the past.</li>\n                    </ul>\n                    Yes<input \n                        type='checkbox' \n                        name='connections'\n                        checked={this.state.connections}\n                        onChange={this.check}\n                    />\n                </form>\n                <Probability \n                    mathSAT={this.state.mathSAT}\n                    verbalSAT={this.state.verbalSAT}\n                    GPA={this.state.GPA}\n                    subjectSAT={this.state.subjectSAT}\n                    citizenship={this.state.citizenship}\n                    ethnicity={this.state.ethnicity}\n                    athletics={this.state.athletics}\n                    connections={this.state.connections}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Input;\n","import React from 'react';\nimport Form from './components/Form';\n\nclass App extends React.Component{\n  render(){\n    return (\n      <div className=\"app\">\n        <h3>What is your probability of being admitted to Harvard?</h3>\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}